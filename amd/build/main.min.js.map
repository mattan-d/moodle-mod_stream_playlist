{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main.\n *\n * @package\n * @category    admin\n * @copyright  2024 mattandor <mattan@centricapp.co.il>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\"jquery\", \"jqueryui\", \"core/ajax\", \"core/notification\", \"core/str\", \"core/url\"], (\n  $,\n  jqui,\n  ajax,\n  notification,\n  str,\n  url,\n) => ({\n  init: function () {\n    var self = this\n\n    this.elements = $(\"#stream-elements\")\n    this.loadingbars = url.imageUrl(\"icones/loading-bars\", \"stream\")\n    this.selectedIds = ($(\"input[name=identifier]\").val() || \"\").split(\",\").filter(Boolean)\n    this.videoOrder = []\n\n    // Initialize video order from existing data\n    try {\n      var orderData = $(\"input[name=video_order]\").val()\n      if (orderData) {\n        this.videoOrder = JSON.parse(orderData)\n      }\n    } catch (e) {\n      this.videoOrder = []\n    }\n\n    // Initialize sortable playlist\n    this.initSortablePlaylist()\n\n    $(\"body\").on(\"click\", \"#stream-elements .list-item-grid\", function () {\n      var itemid = $(this).data(\"itemid\").toString()\n      var index = self.selectedIds.indexOf(itemid)\n\n      if (index > -1) {\n        self.selectedIds.splice(index, 1)\n        $(this).find(\".item\").removeClass(\"selected\")\n        // Remove from video order\n        var orderIndex = self.videoOrder.indexOf(itemid)\n        if (orderIndex > -1) {\n          self.videoOrder.splice(orderIndex, 1)\n        }\n      } else {\n        self.selectedIds.push(itemid)\n        $(this).find(\".item\").addClass(\"selected\")\n        // Add to video order if not already there\n        if (self.videoOrder.indexOf(itemid) === -1) {\n          self.videoOrder.push(itemid)\n        }\n      }\n      $(\"input[name=identifier]\").val(self.selectedIds.join(\",\"))\n      $(\"input[name=video_order]\").val(JSON.stringify(self.videoOrder))\n      self.updatePlaylistOrder()\n    })\n\n    $(\"body\").on(\"click\", \"#stream-load #stream-sort .btn\", function (e) {\n      e.preventDefault()\n      $(\"#stream-load #stream-sort .btn\").removeClass(\"active\")\n      $(this).toggleClass(\"active\")\n      self.load()\n    })\n\n    $(\"body\").on(\"click\", \".btn-upload\", (e) => {\n      e.preventDefault()\n      $(\"#upload_stream\").toggle()\n    })\n\n    $(\"#stream-title-search\").keyup(() => {\n      self.load()\n    })\n\n    this.load()\n\n    window.addEventListener(\n      \"message\",\n      (event) => {\n        if (event.data.iframeHeight) {\n          var iframe = document.getElementById(\"upload_stream\")\n          if (iframe) {\n            iframe.style.height = event.data.iframeHeight + \"px\"\n          }\n        }\n      },\n      false,\n    )\n\n    // Add event listener to receive messages from iframes\n    window.addEventListener(\n      \"message\",\n      function (event) {\n        this.message(event, self)\n      }.bind(this),\n      false,\n    )\n  },\n\n  initSortablePlaylist: function () {\n\n\n    // Create playlist container if it doesn't exist\n    if ($(\"#playlist-container\").length === 0) {\n      $(\"#stream-load\").after(\n        '<div id=\"playlist-container\"><h4>Selected Videos (Drag to reorder):</h4><ul id=\"sortable-playlist\" class=\"list-group\"></ul></div>',\n      )\n    }\n\n    // Initialize sortable with a delay to ensure DOM is ready\n    setTimeout(() => {\n      if ($(\"#sortable-playlist\").length > 0) {\n        try {\n          $(\"#sortable-playlist\").sortable({\n            update: (event, ui) => {\n              this.updateVideoOrderFromPlaylist()\n            },\n            placeholder: \"ui-state-highlight list-group-item\",\n            cursor: \"move\",\n            tolerance: \"pointer\",\n            opacity: 0.8,\n          })\n        } catch (e) {\n          console.warn(\"jQuery UI sortable not available, using fallback drag implementation\")\n          this.initFallbackDragDrop()\n        }\n      }\n    }, 100)\n\n    this.updatePlaylistOrder()\n  },\n\n  initFallbackDragDrop: function () {\n    var self = this\n    var draggedElement = null\n\n    // Add drag and drop event listeners as fallback\n    $(document).on(\"dragstart\", \".playlist-item\", function (e) {\n      draggedElement = this\n      $(this).addClass(\"dragging\")\n      e.originalEvent.dataTransfer.effectAllowed = \"move\"\n      e.originalEvent.dataTransfer.setData(\"text/html\", this.outerHTML)\n    })\n\n    $(document).on(\"dragend\", \".playlist-item\", function (e) {\n      $(this).removeClass(\"dragging\")\n      draggedElement = null\n    })\n\n    $(document).on(\"dragover\", \".playlist-item\", function (e) {\n      e.preventDefault()\n      e.originalEvent.dataTransfer.dropEffect = \"move\"\n\n      if (draggedElement !== this) {\n        var rect = this.getBoundingClientRect()\n        var midpoint = rect.top + rect.height / 2\n\n        if (e.originalEvent.clientY < midpoint) {\n          $(this).before(draggedElement)\n        } else {\n          $(this).after(draggedElement)\n        }\n\n        self.updateVideoOrderFromPlaylist()\n      }\n    })\n\n    // Make items draggable\n    $(document).on(\"mouseenter\", \".playlist-item\", function () {\n      $(this).attr(\"draggable\", \"true\")\n    })\n  },\n\n  updatePlaylistOrder: function () {\n\n    var playlist = $(\"#sortable-playlist\")\n    playlist.empty()\n\n    // Add selected videos to playlist in order\n    this.videoOrder.forEach((videoId) => {\n      if (this.selectedIds.indexOf(videoId) > -1) {\n        var videoElement = $(\"#video_identifier_\" + videoId)\n        if (videoElement.length > 0) {\n          var title = videoElement.find(\".title\").text()\n          var thumbnail = videoElement.find(\"img\").attr(\"src\")\n\n          var playlistItem = $(\n            '<li class=\"list-group-item playlist-item\" data-video-id=\"' +\n              videoId +\n              '\" draggable=\"true\">' +\n              '<div class=\"d-flex align-items-center\">' +\n              '<img src=\"' +\n              thumbnail +\n              '\" class=\"playlist-thumbnail me-3\" style=\"width: 60px; height: 34px; object-fit: cover;\">' +\n              '<span class=\"playlist-title flex-grow-1\">' +\n              title +\n              \"</span>\" +\n              '<span class=\"drag-handle ms-2\" style=\"cursor: move;\">⋮⋮</span>' +\n              \"</div>\" +\n              \"</li>\",\n          )\n\n          playlist.append(playlistItem)\n        }\n      }\n    })\n\n    // Show/hide playlist based on selection\n    if (this.selectedIds.length > 0) {\n      $(\"#playlist-container\").show()\n    } else {\n      $(\"#playlist-container\").hide()\n    }\n  },\n\n  updateVideoOrderFromPlaylist: function () {\n    var newOrder = []\n    $(\"#sortable-playlist .playlist-item\").each(function () {\n      newOrder.push($(this).data(\"video-id\").toString())\n    })\n    this.videoOrder = newOrder\n    $(\"input[name=video_order]\").val(JSON.stringify(this.videoOrder))\n  },\n\n  message: (event, self) => {\n    // Check if the message contains the streamid\n    if (event.data && event.data.streamid) {\n      var streamid = event.data.streamid.toString()\n      if (self.selectedIds.indexOf(streamid) === -1) {\n        self.selectedIds.push(streamid)\n        if (self.videoOrder.indexOf(streamid) === -1) {\n          self.videoOrder.push(streamid)\n        }\n      }\n      $(\"input[name=identifier]\").val(self.selectedIds.join(\",\"))\n      $(\"input[name=video_order]\").val(JSON.stringify(self.videoOrder))\n      $(\"#upload_stream\").hide()\n      self.load()\n    }\n  },\n\n  load: function () {\n    var sort = $(\"#stream-load #stream-sort .btn.active\").attr(\"data-name\")\n\n    this.elements.html('<div style=\"text-align:center\"><img height=\"80\" src=\"' + this.loadingbars + '\" ></div>')\n\n    ajax\n      .call([\n        {\n          methodname: \"mod_stream_video_list\",\n          args: {\n            term: $(\"#stream-title-search\").val(),\n            courseid: $('input[name=\"course\"]').val(),\n            sort: sort,\n          },\n        },\n      ])[0]\n      .then((response) => this.list(response, this))\n      .catch((error) => this.failed(error, this))\n  },\n\n  failed: (error, self) =>\n    str\n      .get_string(\"servererror\", \"moodle\")\n      .then((connectionfailed) => self.elements.html('<div class=\"alert alert-danger\">' + connectionfailed + \"</div>\")),\n\n  list: (response, self) => {\n    if (response.status == \"success\") {\n      if (response.videos.length) {\n        self.elements.html(\"\")\n\n        $.each(response.videos, (key, video) => {\n          str\n            .get_strings([\n              { key: \"views\", component: \"mod_stream\" },\n              { key: \"before\", component: \"mod_stream\" },\n            ])\n            .then((string) => {\n              var html =\n                '<div class=\"col list-item-grid\" data-itemid=\"' +\n                video.id +\n                '\" id=\"video_identifier_' +\n                video.id +\n                '\">' +\n                '<span class=\"item\"><div class=\"thumbnail\">' +\n                '<img src=\"' +\n                video.thumbnail +\n                '\" class=\"img-fluid img-rounded\">' +\n                '<span class=\"datecreated\">' +\n                video.datecreated +\n                '</span><span class=\"duration\">' +\n                video.duration +\n                '</span></div><span class=\"title\">' +\n                video.title +\n                '</span><span class=\"details\">' +\n                video.views +\n                \" \" +\n                string[0] +\n                ' <span class=\"bubble\">●</span>' +\n                \" \" +\n                string[1] +\n                \" \" +\n                video.elapsed +\n                \"</span></span></div>\"\n              self.elements.append(html)\n\n              if (self.selectedIds.indexOf(video.id.toString()) > -1) {\n                $(\"#video_identifier_\" + video.id)\n                  .find(\".item\")\n                  .addClass(\"selected\")\n              }\n\n              // Update playlist after adding videos\n              self.updatePlaylistOrder()\n\n              return null\n            })\n            .catch((error) => self.failed(error, self))\n        })\n      } else {\n        return str\n          .get_string(\"noresults\", \"mod_stream\")\n          .then((noresults) => self.elements.html('<div class=\"alert alert-info\">' + noresults + \"</div>\"))\n      }\n    }\n    return true\n  },\n}))\n"],"names":["define","$","jqui","ajax","notification","str","url","init","self","this","elements","loadingbars","imageUrl","selectedIds","val","split","filter","Boolean","videoOrder","orderData","JSON","parse","e","initSortablePlaylist","on","itemid","data","toString","index","indexOf","splice","find","removeClass","orderIndex","push","addClass","join","stringify","updatePlaylistOrder","preventDefault","toggleClass","load","toggle","keyup","window","addEventListener","event","iframeHeight","iframe","document","getElementById","style","height","message","bind","length","after","setTimeout","sortable","update","ui","updateVideoOrderFromPlaylist","placeholder","cursor","tolerance","opacity","console","warn","initFallbackDragDrop","draggedElement","originalEvent","dataTransfer","effectAllowed","setData","outerHTML","dropEffect","rect","getBoundingClientRect","midpoint","top","clientY","before","attr","playlist","empty","forEach","videoId","videoElement","title","text","thumbnail","playlistItem","append","show","hide","newOrder","each","streamid","sort","html","call","methodname","args","term","courseid","then","response","list","catch","error","failed","get_string","connectionfailed","status","videos","noresults","key","video","get_strings","component","string","id","datecreated","duration","views","elapsed"],"mappings":";;;;;;;;AAuBAA,OAAM,kBAAC,CAAC,SAAU,WAAY,YAAa,oBAAqB,WAAY,YAAa,CACvFC,EACAC,KACAC,KACAC,aACAC,IACAC,OACI,CACJC,KAAM,WACJ,IAAIC,KAAOC,KAEXA,KAAKC,SAAWT,EAAE,oBAClBQ,KAAKE,YAAcL,IAAIM,SAAS,sBAAuB,UACvDH,KAAKI,aAAeZ,EAAE,0BAA0Ba,OAAS,IAAIC,MAAM,KAAKC,OAAOC,SAC/ER,KAAKS,WAAa,GAGlB,IACE,IAAIC,UAAYlB,EAAE,2BAA2Ba,MACzCK,YACFV,KAAKS,WAAaE,KAAKC,MAAMF,WAEhC,CAAC,MAAOG,GACPb,KAAKS,WAAa,EACpB,CAGAT,KAAKc,uBAELtB,EAAE,QAAQuB,GAAG,QAAS,mCAAoC,WACxD,IAAIC,OAASxB,EAAEQ,MAAMiB,KAAK,UAAUC,WAChCC,MAAQpB,KAAKK,YAAYgB,QAAQJ,QAErC,GAAIG,OAAS,EAAG,CACdpB,KAAKK,YAAYiB,OAAOF,MAAO,GAC/B3B,EAAEQ,MAAMsB,KAAK,SAASC,YAAY,YAElC,IAAIC,WAAazB,KAAKU,WAAWW,QAAQJ,QACrCQ,YAAc,GAChBzB,KAAKU,WAAWY,OAAOG,WAAY,EAEvC,MACEzB,KAAKK,YAAYqB,KAAKT,QACtBxB,EAAEQ,MAAMsB,KAAK,SAASI,SAAS,aAEU,IAArC3B,KAAKU,WAAWW,QAAQJ,SAC1BjB,KAAKU,WAAWgB,KAAKT,QAGzBxB,EAAE,0BAA0Ba,IAAIN,KAAKK,YAAYuB,KAAK,MACtDnC,EAAE,2BAA2Ba,IAAIM,KAAKiB,UAAU7B,KAAKU,aACrDV,KAAK8B,qBACP,GAEArC,EAAE,QAAQuB,GAAG,QAAS,iCAAkC,SAAUF,GAChEA,EAAEiB,iBACFtC,EAAE,kCAAkC+B,YAAY,UAChD/B,EAAEQ,MAAM+B,YAAY,UACpBhC,KAAKiC,MACP,GAEAxC,EAAE,QAAQuB,GAAG,QAAS,cAAgBF,IACpCA,EAAEiB,iBACFtC,EAAE,kBAAkByC,WAGtBzC,EAAE,wBAAwB0C,MAAM,KAC9BnC,KAAKiC,SAGPhC,KAAKgC,OAELG,OAAOC,iBACL,UACCC,QACC,GAAIA,MAAMpB,KAAKqB,aAAc,CAC3B,IAAIC,OAASC,SAASC,eAAe,iBACjCF,SACFA,OAAOG,MAAMC,OAASN,MAAMpB,KAAKqB,aAAe,KAEpD,IAEF,GAIFH,OAAOC,iBACL,UACA,SAAUC,OACRrC,KAAK4C,QAAQP,MAAOtC,KACrB,EAAC8C,KAAK7C,OACP,EAEH,EAEDc,qBAAsB,WAIoB,IAApCtB,EAAE,uBAAuBsD,QAC3BtD,EAAE,gBAAgBuD,MAChB,qIAKJC,WAAW,KACT,GAAIxD,EAAE,sBAAsBsD,OAAS,EACnC,IACEtD,EAAE,sBAAsByD,SAAS,CAC/BC,OAAQA,CAACb,MAAOc,MACdnD,KAAKoD,gCAEPC,YAAa,qCACbC,OAAQ,OACRC,UAAW,UACXC,QAAS,IAEZ,CAAC,MAAO3C,GACP4C,QAAQC,KAAK,wEACb1D,KAAK2D,sBACP,GAED,KAEH3D,KAAK6B,qBACN,EAED8B,qBAAsB,WACpB,IAAI5D,KAAOC,KACP4D,eAAiB,KAGrBpE,EAAEgD,UAAUzB,GAAG,YAAa,iBAAkB,SAAUF,GACtD+C,eAAiB5D,KACjBR,EAAEQ,MAAM0B,SAAS,YACjBb,EAAEgD,cAAcC,aAAaC,cAAgB,OAC7ClD,EAAEgD,cAAcC,aAAaE,QAAQ,YAAahE,KAAKiE,UACzD,GAEAzE,EAAEgD,UAAUzB,GAAG,UAAW,iBAAkB,SAAUF,GACpDrB,EAAEQ,MAAMuB,YAAY,YACpBqC,eAAiB,IACnB,GAEApE,EAAEgD,UAAUzB,GAAG,WAAY,iBAAkB,SAAUF,GAIrD,GAHAA,EAAEiB,iBACFjB,EAAEgD,cAAcC,aAAaI,WAAa,OAEtCN,iBAAmB5D,KAAM,CAC3B,IAAImE,KAAOnE,KAAKoE,wBACZC,SAAWF,KAAKG,IAAMH,KAAKxB,OAAS,EAEpC9B,EAAEgD,cAAcU,QAAUF,SAC5B7E,EAAEQ,MAAMwE,OAAOZ,gBAEfpE,EAAEQ,MAAM+C,MAAMa,gBAGhB7D,KAAKqD,8BACP,CACF,GAGA5D,EAAEgD,UAAUzB,GAAG,aAAc,iBAAkB,WAC7CvB,EAAEQ,MAAMyE,KAAK,YAAa,OAC5B,EACD,EAED5C,oBAAqB,WAEnB,IAAI6C,SAAWlF,EAAE,sBACjBkF,SAASC,QAGT3E,KAAKS,WAAWmE,QAASC,UACvB,GAAI7E,KAAKI,YAAYgB,QAAQyD,UAAY,EAAG,CAC1C,IAAIC,aAAetF,EAAE,qBAAuBqF,SAC5C,GAAIC,aAAahC,OAAS,EAAG,CAC3B,IAAIiC,MAAQD,aAAaxD,KAAK,UAAU0D,OACpCC,UAAYH,aAAaxD,KAAK,OAAOmD,KAAK,OAE1CS,aAAe1F,EACjB,4DACEqF,QADF,uEAKEI,UALF,oIAQEF,MARF,oFAeFL,SAASS,OAAOD,aAClB,CACF,IAIElF,KAAKI,YAAY0C,OAAS,EAC5BtD,EAAE,uBAAuB4F,OAEzB5F,EAAE,uBAAuB6F,MAE5B,EAEDjC,6BAA8B,WAC5B,IAAIkC,SAAW,GACf9F,EAAE,qCAAqC+F,KAAK,WAC1CD,SAAS7D,KAAKjC,EAAEQ,MAAMiB,KAAK,YAAYC,WACzC,GACAlB,KAAKS,WAAa6E,SAClB9F,EAAE,2BAA2Ba,IAAIM,KAAKiB,UAAU5B,KAAKS,YACtD,EAEDmC,QAASA,CAACP,MAAOtC,QAEf,GAAIsC,MAAMpB,MAAQoB,MAAMpB,KAAKuE,SAAU,CACrC,IAAIA,SAAWnD,MAAMpB,KAAKuE,SAAStE,YACS,IAAxCnB,KAAKK,YAAYgB,QAAQoE,YAC3BzF,KAAKK,YAAYqB,KAAK+D,WACqB,IAAvCzF,KAAKU,WAAWW,QAAQoE,WAC1BzF,KAAKU,WAAWgB,KAAK+D,WAGzBhG,EAAE,0BAA0Ba,IAAIN,KAAKK,YAAYuB,KAAK,MACtDnC,EAAE,2BAA2Ba,IAAIM,KAAKiB,UAAU7B,KAAKU,aACrDjB,EAAE,kBAAkB6F,OACpBtF,KAAKiC,MACP,GAGFA,KAAM,WACJ,IAAIyD,KAAOjG,EAAE,yCAAyCiF,KAAK,aAE3DzE,KAAKC,SAASyF,KAAK,wDAA0D1F,KAAKE,YAAc,aAEhGR,KACGiG,KAAK,CACJ,CACEC,WAAY,wBACZC,KAAM,CACJC,KAAMtG,EAAE,wBAAwBa,MAChC0F,SAAUvG,EAAE,wBAAwBa,MACpCoF,KAAMA,SAGT,GACFO,KAAMC,UAAajG,KAAKkG,KAAKD,SAAUjG,OACvCmG,MAAOC,OAAUpG,KAAKqG,OAAOD,MAAOpG,MACxC,EAEDqG,OAAQA,CAACD,MAAOrG,OACdH,IACG0G,WAAW,cAAe,UAC1BN,KAAMO,kBAAqBxG,KAAKE,SAASyF,KAAK,mCAAqCa,iBAAmB,WAE3GL,KAAMA,CAACD,SAAUlG,QACf,GAAuB,WAAnBkG,SAASO,OAAqB,CAChC,IAAIP,SAASQ,OAAO3D,OAoDlB,OAAOlD,IACJ0G,WAAW,YAAa,cACxBN,KAAMU,WAAc3G,KAAKE,SAASyF,KAAK,iCAAmCgB,UAAY,WArDzF3G,KAAKE,SAASyF,KAAK,IAEnBlG,EAAE+F,KAAKU,SAASQ,OAAQ,CAACE,IAAKC,SAC5BhH,IACGiH,YAAY,CACX,CAAEF,IAAK,QAASG,UAAW,cAC3B,CAAEH,IAAK,SAAUG,UAAW,gBAE7Bd,KAAMe,SACL,IAAIrB,KACF,gDACAkB,MAAMI,GACN,0BACAJ,MAAMI,GAHN,yDAOAJ,MAAM3B,UAPN,6DAUA2B,MAAMK,YACN,iCACAL,MAAMM,SACN,oCACAN,MAAM7B,MACN,gCACA6B,MAAMO,MACN,IACAJ,OAAO,GAlBP,kCAqBAA,OAAO,GACP,IACAH,MAAMQ,QACN,uBAYF,OAXArH,KAAKE,SAASkF,OAAOO,MAEjB3F,KAAKK,YAAYgB,QAAQwF,MAAMI,GAAG9F,aAAe,GACnD1B,EAAE,qBAAuBoH,MAAMI,IAC5B1F,KAAK,SACLI,SAAS,YAId3B,KAAK8B,sBAEE,OAERsE,MAAOC,OAAUrG,KAAKsG,OAAOD,MAAOrG,QAO7C,CACA,OAAO"}