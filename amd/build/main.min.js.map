{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main.\n *\n * @package\n * @category    admin\n * @copyright  2024 mattandor <mattan@centricapp.co.il>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'jqueryui', 'core/ajax', 'core/notification', 'core/str', 'core/url'], (\n    $,\n    jqui,\n    ajax,\n    notification,\n    str,\n    url,\n) => ({\n  init: function() {\n    var self = this;\n\n    this.elements = $('#stream-elements');\n    this.loadingbars = url.imageUrl('icones/loading-bars', 'stream');\n    this.selectedIds = ($('input[name=identifier]').val() || '').split(',').filter(Boolean);\n    this.videoOrder = [];\n\n    // Initialize video order from existing data\n    try {\n      var orderData = $('input[name=video_order]').val();\n      if (orderData) {\n        this.videoOrder = JSON.parse(orderData);\n      }\n    } catch (e) {\n      this.videoOrder = [];\n    }\n\n    this.currentPage = 1;\n    this.itemsPerPage = 12; // 3 rows of 4 items\n    this.totalVideos = 0;\n    this.allVideos = []; // Store all videos for pagination\n\n    // Initialize sortable playlist\n    this.initSortablePlaylist();\n\n    $('body').on('click', '#stream-elements .list-item-grid', function() {\n      var itemid = $(this).data('itemid').toString();\n      var index = self.selectedIds.indexOf(itemid);\n\n      if (index > -1) {\n        self.selectedIds.splice(index, 1);\n        $(this).find('.item').removeClass('selected');\n        // Remove from video order\n        var orderIndex = self.videoOrder.indexOf(itemid);\n        if (orderIndex > -1) {\n          self.videoOrder.splice(orderIndex, 1);\n        }\n      } else {\n        self.selectedIds.push(itemid);\n        $(this).find('.item').addClass('selected');\n        // Add to video order if not already there\n        if (self.videoOrder.indexOf(itemid) === -1) {\n          self.videoOrder.push(itemid);\n        }\n      }\n      $('input[name=identifier]').val(self.selectedIds.join(','));\n      $('input[name=video_order]').val(JSON.stringify(self.videoOrder));\n      self.updatePlaylistOrder();\n    });\n\n    $('body').on('click', '#stream-load #stream-sort .btn', function(e) {\n      e.preventDefault();\n      $('#stream-load #stream-sort .btn').removeClass('active');\n      $(this).toggleClass('active');\n      self.load();\n    });\n\n    $('body').on('click', '.btn-upload', (e) => {\n      e.preventDefault();\n      $('#upload_stream').toggle();\n    });\n\n    $('#stream-title-search').keyup(() => {\n      self.load();\n    });\n\n    this.load();\n\n    window.addEventListener(\n        'message',\n        (event) => {\n          if (event.data.iframeHeight) {\n            var iframe = document.getElementById('upload_stream');\n            if (iframe) {\n              iframe.style.height = event.data.iframeHeight + 'px';\n            }\n          }\n        },\n        false,\n    );\n\n    // Add event listener to receive messages from iframes\n    window.addEventListener(\n        'message',\n        function(event) {\n          this.message(event, self);\n        }.bind(this),\n        false,\n    );\n\n    // Pagination click handler\n    $('body').on('click', '#stream-pagination .page-link[data-page]', function(e) {\n      e.preventDefault();\n      var page = parseInt($(this).data('page'));\n      if (page && page !== self.currentPage) {\n        self.currentPage = page;\n        self.renderCurrentPage();\n      }\n    });\n  },\n\n  initSortablePlaylist: function() {\n\n\n    // Create playlist container if it doesn't exist\n    if ($('#playlist-container').length === 0) {\n      // Get localized strings first\n      str.get_strings([\n        {key: 'selectedvideos', component: 'mod_stream'},\n        {key: 'dragtoorder', component: 'mod_stream'},\n      ]).then((strings) => {\n        var containerHtml =\n            '<div id=\"playlist-container\">' +\n            '<h4>' +\n            strings[0] +\n            ' (' +\n            strings[1] +\n            '):</h4>' +\n            '<ul id=\"sortable-playlist\" class=\"list-group\"></ul>' +\n            '</div>';\n\n        $('#stream-load').after(containerHtml);\n\n        // Initialize sortable after container is created\n        this.initializeSortable();\n        this.updatePlaylistOrder();\n      }).catch((error) => {\n        // Fallback to English if string loading fails\n        var containerHtml =\n            '<div id=\"playlist-container\">' +\n            '<h4>Selected Videos (Drag to reorder):</h4>' +\n            '<ul id=\"sortable-playlist\" class=\"list-group\"></ul>' +\n            '</div>';\n\n        $('#stream-load').after(containerHtml);\n\n        // Initialize sortable after container is created\n        this.initializeSortable();\n        this.updatePlaylistOrder();\n      });\n    } else {\n      // Container already exists, just initialize sortable\n      this.initializeSortable();\n      this.updatePlaylistOrder();\n    }\n  },\n\n  initializeSortable: function() {\n    // Initialize sortable with a delay to ensure DOM is ready\n    setTimeout(() => {\n      if ($('#sortable-playlist').length > 0) {\n        try {\n          $('#sortable-playlist').sortable({\n            update: (event, ui) => {\n              this.updateVideoOrderFromPlaylist();\n            },\n            placeholder: 'ui-state-highlight list-group-item',\n            cursor: 'move',\n            tolerance: 'pointer',\n            opacity: 0.8,\n          });\n        } catch (e) {\n          console.warn('jQuery UI sortable not available, using fallback drag implementation');\n          this.initFallbackDragDrop();\n        }\n      }\n    }, 100);\n  },\n\n  initFallbackDragDrop: function() {\n    var self = this;\n    var draggedElement = null;\n\n    // Add drag and drop event listeners as fallback\n    $(document).on('dragstart', '.playlist-item', function(e) {\n      draggedElement = this;\n      $(this).addClass('dragging');\n      e.originalEvent.dataTransfer.effectAllowed = 'move';\n      e.originalEvent.dataTransfer.setData('text/html', this.outerHTML);\n    });\n\n    $(document).on('dragend', '.playlist-item', function(e) {\n      $(this).removeClass('dragging');\n      draggedElement = null;\n    });\n\n    $(document).on('dragover', '.playlist-item', function(e) {\n      e.preventDefault();\n      e.originalEvent.dataTransfer.dropEffect = 'move';\n\n      if (draggedElement !== this) {\n        var rect = this.getBoundingClientRect();\n        var midpoint = rect.top + rect.height / 2;\n\n        if (e.originalEvent.clientY < midpoint) {\n          $(this).before(draggedElement);\n        } else {\n          $(this).after(draggedElement);\n        }\n\n        self.updateVideoOrderFromPlaylist();\n      }\n    });\n\n    // Make items draggable\n    $(document).on('mouseenter', '.playlist-item', function() {\n      $(this).attr('draggable', 'true');\n    });\n  },\n\n  updatePlaylistOrder: function() {\n    var playlist = $('#sortable-playlist');\n    playlist.empty();\n\n    // Add selected videos to playlist in order\n    this.videoOrder.forEach((videoId) => {\n      if (this.selectedIds.indexOf(videoId) > -1) {\n        var videoElement = $('#video_identifier_' + videoId);\n        if (videoElement.length > 0) {\n          var title = videoElement.find('.title').text();\n          var thumbnail = videoElement.find('img').attr('src');\n\n          var playlistItem = $(\n              '<li class=\"list-group-item playlist-item\" data-video-id=\"' +\n              videoId +\n              '\" draggable=\"true\">' +\n              '<div class=\"d-flex align-items-center\">' +\n              '<img src=\"' +\n              thumbnail +\n              '\" class=\"playlist-thumbnail me-3\" style=\"width: 60px; height: 34px; object-fit: cover;\">' +\n              '<span class=\"playlist-title flex-grow-1\">' +\n              title +\n              '</span>' +\n              '<span class=\"drag-handle ms-2\" style=\"cursor: move;\">⋮⋮</span>' +\n              '</div>' +\n              '</li>',\n          );\n\n          playlist.append(playlistItem);\n        }\n      }\n    });\n\n    // Show/hide playlist based on selection\n    if (this.selectedIds.length > 0) {\n      $('#playlist-container').show();\n    } else {\n      $('#playlist-container').hide();\n    }\n  },\n\n  updateVideoOrderFromPlaylist: function() {\n    var newOrder = [];\n    $('#sortable-playlist .playlist-item').each(function() {\n      newOrder.push($(this).data('video-id').toString());\n    });\n    this.videoOrder = newOrder;\n    $('input[name=video_order]').val(JSON.stringify(this.videoOrder));\n  },\n\n  message: (event, self) => {\n    // Check if the message contains the streamid\n    if (event.data && event.data.streamid) {\n      var streamid = event.data.streamid.toString();\n      if (self.selectedIds.indexOf(streamid) === -1) {\n        self.selectedIds.push(streamid);\n        if (self.videoOrder.indexOf(streamid) === -1) {\n          self.videoOrder.push(streamid);\n        }\n      }\n      $('input[name=identifier]').val(self.selectedIds.join(','));\n      $('input[name=video_order]').val(JSON.stringify(self.videoOrder));\n      $('#upload_stream').hide();\n      self.load();\n    }\n  },\n\n  load: function() {\n    var sort = $('#stream-load #stream-sort .btn.active').attr('data-name');\n\n    // Reset pagination when loading new data\n    this.currentPage = 1;\n    this.allVideos = [];\n    this.totalVideos = 0;\n\n    this.elements.html('<div style=\"text-align:center\"><img height=\"80\" src=\"' + this.loadingbars + '\" ></div>');\n\n    ajax.call([\n      {\n        methodname: 'mod_stream_video_list',\n        args: {\n          term: $('#stream-title-search').val(),\n          courseid: $('input[name=\"course\"]').val(),\n          sort: sort,\n        },\n      },\n    ])[0].then((response) => this.list(response, this)).catch((error) => this.failed(error, this));\n  },\n\n  failed: (error, self) =>\n      str.get_string('servererror', 'moodle').\n          then((connectionfailed) => self.elements.html('<div class=\"alert alert-danger\">' + connectionfailed + '</div>')),\n\n  list: (response, self) => {\n    if (response.status == 'success') {\n      if (response.videos.length) {\n        // Store all videos for pagination\n        self.allVideos = response.videos;\n        self.totalVideos = response.videos.length;\n        \n        // Calculate pagination\n        const totalPages = Math.ceil(self.totalVideos / self.itemsPerPage);\n        const startIndex = (self.currentPage - 1) * self.itemsPerPage;\n        const endIndex = startIndex + self.itemsPerPage;\n        const videosToShow = self.allVideos.slice(startIndex, endIndex);\n        \n        self.elements.html('');\n\n        $.each(videosToShow, (key, video) => {\n          str.get_strings([\n            {key: 'views', component: 'mod_stream'},\n            {key: 'before', component: 'mod_stream'},\n          ]).then((string) => {\n            var html =\n                '<div class=\"col list-item-grid\" data-itemid=\"' +\n                video.id +\n                '\" id=\"video_identifier_' +\n                video.id +\n                '\">' +\n                '<span class=\"item\"><div class=\"thumbnail\">' +\n                '<img src=\"' +\n                video.thumbnail +\n                '\" class=\"img-fluid img-rounded\">' +\n                '<span class=\"datecreated\">' +\n                video.datecreated +\n                '</span><span class=\"duration\">' +\n                video.duration +\n                '</span></div><span class=\"title\">' +\n                video.title +\n                '</span><span class=\"details\">' +\n                video.views +\n                ' ' +\n                string[0] +\n                ' <span class=\"bubble\">●</span>' +\n                ' ' +\n                string[1] +\n                ' ' +\n                video.elapsed +\n                '</span></span></div>';\n          self.elements.append(html);\n\n          if (self.selectedIds.indexOf(video.id.toString()) > -1) {\n            $('#video_identifier_' + video.id).find('.item').addClass('selected');\n          }\n\n          // Update playlist after adding videos\n          self.updatePlaylistOrder();\n\n          return null;\n        }).catch((error) => self.failed(error, self));\n        });\n        \n        // Update pagination controls\n        self.updatePagination(totalPages);\n      } else {\n        return str.get_string('noresults', 'mod_stream').\n            then((noresults) => self.elements.html('<div class=\"alert alert-info\">' + noresults + '</div>'));\n      }\n    }\n    return true;\n  },\n\n  updatePagination: function(totalPages) {\n    var self = this;\n    var paginationContainer = $('#stream-pagination');\n    \n    if (totalPages <= 1) {\n      paginationContainer.html('');\n      return;\n    }\n    \n    var paginationHtml = '<nav aria-label=\"Video pagination\"><ul class=\"pagination justify-content-center\">';\n    \n    // Previous button\n    if (self.currentPage > 1) {\n      paginationHtml += '<li class=\"page-item\"><a class=\"page-link\" href=\"#\" data-page=\"' + (self.currentPage - 1) + '\">&laquo; Previous</a></li>';\n    } else {\n      paginationHtml += '<li class=\"page-item disabled\"><span class=\"page-link\">&laquo; Previous</span></li>';\n    }\n    \n    // Page numbers\n    var startPage = Math.max(1, self.currentPage - 2);\n    var endPage = Math.min(totalPages, self.currentPage + 2);\n    \n    if (startPage > 1) {\n      paginationHtml += '<li class=\"page-item\"><a class=\"page-link\" href=\"#\" data-page=\"1\">1</a></li>';\n      if (startPage > 2) {\n        paginationHtml += '<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>';\n      }\n    }\n    \n    for (var i = startPage; i <= endPage; i++) {\n      if (i === self.currentPage) {\n        paginationHtml += '<li class=\"page-item active\"><span class=\"page-link\">' + i + '</span></li>';\n      } else {\n        paginationHtml += '<li class=\"page-item\"><a class=\"page-link\" href=\"#\" data-page=\"' + i + '\">' + i + '</a></li>';\n      }\n    }\n    \n    if (endPage < totalPages) {\n      if (endPage < totalPages - 1) {\n        paginationHtml += '<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>';\n      }\n      paginationHtml += '<li class=\"page-item\"><a class=\"page-link\" href=\"#\" data-page=\"' + totalPages + '\">' + totalPages + '</a></li>';\n    }\n    \n    // Next button\n    if (self.currentPage < totalPages) {\n      paginationHtml += '<li class=\"page-item\"><a class=\"page-link\" href=\"#\" data-page=\"' + (self.currentPage + 1) + '\">Next &raquo;</a></li>';\n    } else {\n      paginationHtml += '<li class=\"page-item disabled\"><span class=\"page-link\">Next &raquo;</span></li>';\n    }\n    \n    paginationHtml += '</ul></nav>';\n    \n    // Show results info\n    var startItem = (self.currentPage - 1) * self.itemsPerPage + 1;\n    var endItem = Math.min(self.currentPage * self.itemsPerPage, self.totalVideos);\n    var infoHtml = '<div class=\"text-center mb-3\"><small class=\"text-muted\">Showing ' + startItem + '-' + endItem + ' of ' + self.totalVideos + ' videos</small></div>';\n    \n    paginationContainer.html(infoHtml + paginationHtml);\n  },\n\n  renderCurrentPage: function() {\n    var self = this;\n    \n    if (self.allVideos.length === 0) {\n      return;\n    }\n    \n    // Calculate pagination\n    const totalPages = Math.ceil(self.totalVideos / self.itemsPerPage);\n    const startIndex = (self.currentPage - 1) * self.itemsPerPage;\n    const endIndex = startIndex + self.itemsPerPage;\n    const videosToShow = self.allVideos.slice(startIndex, endIndex);\n    \n    self.elements.html('');\n\n    $.each(videosToShow, (key, video) => {\n      str.get_strings([\n        {key: 'views', component: 'mod_stream'},\n        {key: 'before', component: 'mod_stream'},\n      ]).then((string) => {\n        var html =\n            '<div class=\"col list-item-grid\" data-itemid=\"' +\n            video.id +\n            '\" id=\"video_identifier_' +\n            video.id +\n            '\">' +\n            '<span class=\"item\"><div class=\"thumbnail\">' +\n            '<img src=\"' +\n            video.thumbnail +\n            '\" class=\"img-fluid img-rounded\">' +\n            '<span class=\"datecreated\">' +\n            video.datecreated +\n            '</span><span class=\"duration\">' +\n            video.duration +\n            '</span></div><span class=\"title\">' +\n            video.title +\n            '</span><span class=\"details\">' +\n            video.views +\n            ' ' +\n            string[0] +\n            ' <span class=\"bubble\">●</span>' +\n            ' ' +\n            string[1] +\n            ' ' +\n            video.elapsed +\n            '</span></span></div>';\n        self.elements.append(html);\n\n        if (self.selectedIds.indexOf(video.id.toString()) > -1) {\n          $('#video_identifier_' + video.id).find('.item').addClass('selected');\n        }\n\n        // Update playlist after adding videos\n        self.updatePlaylistOrder();\n\n        return null;\n      }).catch((error) => self.failed(error, self));\n    });\n    \n    // Update pagination controls\n    self.updatePagination(totalPages);\n  },\n}));\n"],"names":["define","$","jqui","ajax","notification","str","url","init","self","this","elements","loadingbars","imageUrl","selectedIds","val","split","filter","Boolean","videoOrder","orderData","JSON","parse","e","currentPage","itemsPerPage","totalVideos","allVideos","initSortablePlaylist","on","itemid","data","toString","index","indexOf","splice","find","removeClass","orderIndex","push","addClass","join","stringify","updatePlaylistOrder","preventDefault","toggleClass","load","toggle","keyup","window","addEventListener","event","iframeHeight","iframe","document","getElementById","style","height","message","bind","page","parseInt","renderCurrentPage","length","get_strings","key","component","then","strings","containerHtml","after","initializeSortable","catch","error","setTimeout","sortable","update","ui","updateVideoOrderFromPlaylist","placeholder","cursor","tolerance","opacity","console","warn","initFallbackDragDrop","draggedElement","originalEvent","dataTransfer","effectAllowed","setData","outerHTML","dropEffect","rect","getBoundingClientRect","midpoint","top","clientY","before","attr","playlist","empty","forEach","videoId","videoElement","title","text","thumbnail","playlistItem","append","show","hide","newOrder","each","streamid","sort","html","call","methodname","args","term","courseid","response","list","failed","get_string","connectionfailed","status","videos","noresults","totalPages","Math","ceil","startIndex","endIndex","videosToShow","slice","video","string","id","datecreated","duration","views","elapsed","updatePagination","paginationContainer","paginationHtml","startPage","max","endPage","min","i","infoHtml"],"mappings":"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"}
